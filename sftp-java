import com.jcraft.jsch.ChannelSftp;
import com.jcraft.jsch.JSch;
import com.jcraft.jsch.Session;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.File;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.Properties;

@WebServlet("/transfer")
public class FileTransferServlet extends HttpServlet {

    private final String PREDEFINED_DIRECTORY = "/path/to/your/predefined/directory/";

    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        response.setContentType("application/json");

        String filename = request.getParameter("filename");
        String dropLocation = request.getParameter("dropLocation");
        PrintWriter out = response.getWriter();

        File file = new File(PREDEFINED_DIRECTORY + filename);
        if (file.exists()) {
            // File found, proceed with SFTP
            boolean transferSuccess = transferFile(file.getAbsolutePath(), dropLocation);
            if (transferSuccess) {
                out.print("{\"message\":\"File transferred successfully\"}");
            } else {
                out.print("{\"message\":\"Failed to transfer file\"}");
            }
        } else {
            // File not found
            out.print("{\"message\":\"No file found\"}");
        }
    }

    private boolean transferFile(String localFile, String remoteDir) {
        String host = "your.sftp.server.com";
        int port = 22;
        String user = "your_username";
        String password = "your_password";

        JSch jsch = new JSch();
        Session session = null;
        ChannelSftp channelSftp = null;

        try {
            session = jsch.getSession(user, host, port);
            session.setPassword(password);

            Properties config = new Properties();
            config.put("StrictHostKeyChecking", "no");
            session.setConfig(config);

            session.connect();
            channelSftp = (ChannelSftp) session.openChannel("sftp");
            channelSftp.connect();

            channelSftp.put(localFile, remoteDir);
            channelSftp.disconnect();
            session.disconnect();
            return true;

        } catch (Exception e) {
            e.printStackTrace();
            return false;
        } finally {
            if (channelSftp != null) {
                channelSftp.disconnect();
            }
            if (session != null) {
                session.disconnect();
            }
        }
    }
}